#+TITLE: Lainkun's Emacs configuration
Here is my Emacs configuration

* Basic settings
Native settings that not need any packages
** Personal info
Let know Emacs who am i
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Lain")
#+END_SRC
** Interface tweaks
#+BEGIN_SRC emacs-lisp
(setq show-paren-style 'expression)
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(setq inhibit-startup-message t)
#+END_SRC
** Navigation tweaks
#+BEGIN_SRC emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
(setq indo-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
#+END_SRC
** Backups and other
#+BEGIN_SRC emacs-lisp
(setq make-backup-files         nil) ; Don't want any backup files
(setq auto-save-list-file-name  nil) ; Don't want any .saves files
(setq auto-save-default         nil) ; Don't want any auto saving
#+END_SRC
** UTF-8
#+BEGIN_SRC emacs-lisp
(prefer-coding-system 'utf-8)
#+END_SRC
* Languages settings
** Lisps
*** Clojure
#+BEGIN_SRC emacs-lisp
(use-package clojure-mode
  :ensure t
  :init
  (add-hook 'clojure-mode-hook 'clojure-mode:setup))
#+END_SRC
*** Common Lisp
** Ruby
** Python
#+BEGIN_SRC emacs-lisp
(use-package jedi
  :ensure t
  :init
  (add-hook 'python-mode-hook 'jedi:setup)
  (add-hook 'python-mode-hook 'jedi:ac-setup))
#+END_SRC
** JavaScript
- Vanila JS
#+BEGIN_SRC emacs-lisp
(use-package js2-mode
  :ensure t
  :init
  (add-hook 'javascript-mode-hook 'js2-mode:setup))
#+END_SRC
- TypeScript
#+BEGIN_SRC emacs-lisp
(use-package typescript-mode
  :ensure t
  :init
  (add-hook 'typescript-mode-hook 'typescript-mode:setup))
#+END_SRC   
** DataBases
#+BEGIN_EXAMPLE emacs-lisp
(use-package sql-indent
  :ensure t
  :init
  (add-hook 'sql-mode-hook 'sql-indent:setup)) 
#+END_EXAMPLE
** Coding Helpers
Packages that makes coding comfortable
- Auto-complete
#+BEGIN_SRC emacs-lisp
(use-package auto-complete
  :ensure t
  :init
  (progn
    (ac-config-default)
    (global-auto-complete-mode t)
    ))
#+END_SRC
- Flycheck
#+BEGIN_SRC emacs-lisp
(use-package flycheck
  :ensure t
  :init
  (global-flycheck-mode))
#+END_SRC
- Linium
#+BEGIN_SRC emacs-lisp
(use-package hlinum
  :ensure t
  :init
  (hlinum-activate)) 
#+END_SRC
* Misc packages
- Color Theme
#+BEGIN_SRC emacs-lisp
(use-package seoul256-theme
  :ensure t
  :init (progn
	  (setq seoul256-background 235)
	  (load-theme 'seoul256 t)))
#+END_SRC
- Evil mode
#+BEGIN_SRC emacs-lisp
(use-package evil
  :ensure t
  :init (progn
    ;; if we don't have this evil overwrites the cursor color
    (setq evil-default-cursor t)
    (evil-mode 1)))
#+END_SRC
